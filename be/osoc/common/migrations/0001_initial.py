# Generated by Django 3.2.13 on 2022-04-12 13:11

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=255, verbose_name='name')),
                ('last_name', models.CharField(max_length=255, verbose_name='last name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_admin', models.BooleanField(default=False, verbose_name='is admin')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('partner_name', models.CharField(max_length=255, verbose_name='partner name')),
                ('extra_info', models.TextField(verbose_name='extra info')),
                ('coaches', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('color', models.CharField(max_length=50, verbose_name='color')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment_agreement', models.CharField(max_length=255, verbose_name='employment agreement')),
                ('hinder_work', models.TextField(blank=True, null=True, verbose_name='hinder work')),
                ('first_name', models.CharField(max_length=255, verbose_name='name')),
                ('last_name', models.CharField(max_length=255, verbose_name='last name')),
                ('call_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='call name')),
                ('gender', models.CharField(choices=[('0', 'FEMALE'), ('1', 'MALE'), ('2', 'TRANSGENDER'), ('3', 'UNKNOWN')], default='3', max_length=1, verbose_name='gender')),
                ('pronouns', models.CharField(blank=True, max_length=255, null=True, verbose_name='pronouns')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('language', models.CharField(max_length=255, verbose_name='language')),
                ('english_rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='english rating')),
                ('motivation', models.TextField(verbose_name='motivation')),
                ('cv', models.URLField(max_length=255, verbose_name='cv')),
                ('portfolio', models.URLField(max_length=255, verbose_name='portfolio')),
                ('fun_fact', models.TextField(verbose_name='fun fact')),
                ('school_name', models.CharField(max_length=255, verbose_name='school name')),
                ('degree', models.CharField(max_length=255, verbose_name='degree')),
                ('degree_duration', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='degree duration')),
                ('degree_current_year', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='degree current year')),
                ('studies', models.CharField(max_length=255, verbose_name='studies')),
                ('alum', models.BooleanField(default=False, verbose_name='alum')),
                ('student_coach', models.BooleanField(default=False, verbose_name='wants to be student coach')),
                ('best_skill', models.CharField(max_length=255, verbose_name='best skill')),
            ],
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggestion', models.CharField(choices=[('0', 'Yes'), ('1', 'No'), ('2', 'Maybe')], max_length=1, verbose_name='suggestion')),
                ('reason', models.CharField(blank=True, default='', max_length=500, verbose_name='reason')),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.student')),
            ],
            options={
                'unique_together': {('student', 'coach')},
            },
        ),
        migrations.AddField(
            model_name='student',
            name='final_decision',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='final_decision_student', to='common.suggestion'),
        ),
        migrations.AddField(
            model_name='student',
            name='skills',
            field=models.ManyToManyField(to='common.Skill'),
        ),
        migrations.AddField(
            model_name='student',
            name='suggestions',
            field=models.ManyToManyField(blank=True, through='common.Suggestion', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SentEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='send date and time')),
                ('info', models.CharField(blank=True, default='', max_length=255, verbose_name='email info')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.student')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RequiredSkills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(default=1, verbose_name='amount')),
                ('comment', models.CharField(blank=True, default='', max_length=500, verbose_name='comment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.project')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.skill')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(blank=True, default='', max_length=500, verbose_name='reason')),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.project')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.skill')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.student')),
            ],
            options={
                'unique_together': {('project', 'student', 'coach')},
            },
        ),
        migrations.AddField(
            model_name='project',
            name='required_skills',
            field=models.ManyToManyField(through='common.RequiredSkills', to='common.Skill'),
        ),
        migrations.AddField(
            model_name='project',
            name='suggested_students',
            field=models.ManyToManyField(blank=True, through='common.ProjectSuggestion', to='common.Student'),
        ),
        migrations.CreateModel(
            name='GithubUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=255, unique=True, verbose_name='login')),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
